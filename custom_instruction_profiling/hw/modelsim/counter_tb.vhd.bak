library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

ENTITY counter_tb IS
END counter_tb;

ARCHITECTURE counter_tb_logic OF counter_tb IS

	component counter
		port
		(
			-- Avalon interfaces signals
			Clk 			: IN  std_logic;
			nReset 		: IN  std_logic;
			Address 		: IN  std_logic_vector (2 DOWNTO 0);
			ChipSelect  : IN  std_logic;
			Read 			: IN  std_logic;
			Write 		: IN  std_logic;
			ReadData 	: OUT std_logic_vector (31 DOWNTO 0);
			WriteData 	: IN  std_logic_vector (31 DOWNTO 0);
		
			-- Interruptions
			IRQ 			: OUT std_logic
		);
	end component;

	signal Clk 			:  std_logic;
	signal nReset 		:  std_logic;
	signal Address 	:  std_logic_vector (2 DOWNTO 0);
	signal ChipSelect :  std_logic;
	signal Read 		:  std_logic;
	signal Write 		:  std_logic;
	signal ReadData 	:  std_logic_vector (31 DOWNTO 0);
	signal WriteData 	:  std_logic_vector (31 DOWNTO 0);
	signal IRQ 			:  std_logic;

   	constant clk_period : time := 10 ns;
	
BEGIN
	counter_instance : counter
	port map
	(
		Clk,
		nReset,
		Address,
		ChipSelect,
		Read,
		Write,
		ReadData,
		WriteData,
		IRQ
	);
	
	nReset <= '1',
		  '0' after clk_period + clk_period/5;

	ChipSelect <= '0',
		      '1' after clk_period * 2;

	Write <= '0', 
		 '1' after clk_period*2 + 3 ns,
		 '0' after clk_period*5;

	Read <= '0',
		'1' after clk_period*7,
		'0' after clk_period*10 ns;

	Address <= "000", 
		   "010" after clk_period*3 ns;

	clk_process : process begin
		Clk <= '1';
		wait for clk_period/2;
		Clk <= '0';
		wait for clk_period/2;
	end process clk_process;
	
	stop_sim : process begin
		wait for clk_period * 30;
		assert false;
		report "simulation finished" severity failure;
	end process stop_sim;
	
END counter_tb_logic;
